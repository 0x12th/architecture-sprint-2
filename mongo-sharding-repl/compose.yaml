name: mongo-sharding-repl
services:
  configSrv:
    image: mongo:4.4.6
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config_data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1_1:
    image: mongo:4.4.6
    container_name: shard1_1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1_1_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1_2:
    image: mongo:4.4.6
    container_name: shard1_2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - shard1_2_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard1_3:
    image: mongo:4.4.6
    container_name: shard1_3
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - shard1_3_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2_1:
    image: mongo:4.4.6
    container_name: shard2_1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2_1_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27019"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2_2:
    image: mongo:4.4.6
    container_name: shard2_2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - shard2_2_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27019"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  shard2_3:
    image: mongo:4.4.6
    container_name: shard2_3
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - shard2_3_data:/data/db
    command:
      ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27019"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:4.4.6
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020",
      ]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.17.0.22

volumes:
  config_data:
  shard1_1_data:
  shard1_2_data:
  shard1_3_data:
  shard2_1_data:
  shard2_2_data:
  shard2_3_data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16